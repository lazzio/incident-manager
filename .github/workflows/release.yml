name: Create Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        
      - name: Install semantic-release
        run: |
          npm install -g @semantic-release/git \
            @semantic-release/changelog \
            @semantic-release/exec \
            @semantic-release/commit-analyzer \
            @semantic-release/release-notes-generator \
            @semantic-release/github \
            @semantic-release/npm \
            semantic-release \
            conventional-changelog-conventionalcommits \
            semantic-release-replace-plugin
          
      - name: Create .releaserc
        run: |
          cat > .releaserc << EOF
          {
            "branches": [
              "master",
              "main"
            ],
            "plugins": [
              [
                "@semantic-release/commit-analyzer",
                {
                  "preset": "conventionalcommits",
                  "releaseRules": [
                    {"breaking": true, "release": "major"},
                    {"type": "feat", "release": "minor"},
                    {"type": "fix", "release": "patch"},
                    {"type": "hotfix", "release": "patch"},
                    {"type": "docs", "release": "patch"},
                    {"type": "perf", "release": "patch"},
                    {"type": "refactor", "release": "patch"},
                    {"type": "revert", "release": "patch"},
                    {"type": "style", "release": "patch"}
                  ],
                  "parserOpts": {
                    "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"]
                  }
                }
              ],
              [
                "@semantic-release/release-notes-generator",
                {
                  "preset": "conventionalcommits",
                  "presetConfig" : {
                    "types": [
                      {"type": "feat", "section": "Features"},
                      {"type": "fix", "section": "Bug Fixes"},
                      {"type": "hotfix", "section": "Hotfix"},
                      {"type": "docs", "section": "Documentation"},
                      {"type": "perf", "section": "Performance"},
                      {"type": "refactor", "section": "Refactor"},
                      {"type": "revert", "section": "Revert"},
                      {"type": "style", "section": "Style"}
                    ],
                    "commitUrlFormat": "{{host}}/{{owner}}/{{repository}}/-/commit/{{hash}}",
                    "compareUrlFormat": "{{host}}/{{owner}}/{{repository}}/-/compare/{{previousTag}}...{{currentTag}}",
                    "issueUrlFormat": "{{host}}/{{owner}}/{{repository}}/-/issues/{{id}}"
                  },
                  "parserOpts": {
                    "noteKeywords": ["BREAKING CHANGE", "BREAKING CHANGES"]
                  }
                }
              ],
              ["@semantic-release/exec", {
                "prepareCmd": "poetry version \${nextRelease.version}"
              }],
              "@semantic-release/changelog",
              "@semantic-release/npm",
              [
                "@semantic-release/git",
                {
                  "assets": [
                    "package.json",
                    "CHANGELOG.md",
                    "package.json"
                  ],
                  "message": "chore(release): \${nextRelease.version} [skip ci]\n\n\${nextRelease.notes}"
                }
              ],
              [
                "@semantic-release/github",
                {
                  "assets": []
                }
              ]
            ]
          }
          EOF
          
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release