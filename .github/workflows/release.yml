name: Create Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  create-release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          
      - name: Install dependencies
        run: poetry install --no-interaction --no-root
        
      - name: Get current version
        id: current_version
        shell: bash
        run: |
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT

      - name: Bump patch version
        id: bump_version
        shell: bash
        run: |
          poetry version patch
          echo "version=$(poetry version -s)" >> $GITHUB_OUTPUT
          
      - name: Configure Git
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
      - name: Commit version update
        run: |
          git add pyproject.toml
          git commit -m "chore: bump version to ${{ steps.bump_version.outputs.new_version }} [skip ci]"
          git push
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump_version.outputs.version }}
          release_name: Release v${{ steps.bump_version.outputs.version }}
          body: |
            Automatic release created from PR #${{ github.event.pull_request.number }} merge
            
            Previous version: v${{ steps.current_version.outputs.version }}
            New version: v${{ steps.bump_version.outputs.version }}
            
            PR Title: ${{ github.event.pull_request.title }}
            Author: @${{ github.event.pull_request.user.login }}
            
            [View changes](https://github.com/${{ github.repository }}/pull/${{ github.event.pull_request.number }})
          draft: false
          prerelease: false